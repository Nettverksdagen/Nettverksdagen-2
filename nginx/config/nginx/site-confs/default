server {
    listen 80;
    server_name nettverksdagene.no;
    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name blogg.nvdagen.no;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name blogg.nvdagen.no;

    ssl on;
    include /config/nginx/proxy-confs/*.subfolder.conf;
    include /config/nginx/ssl.conf;

    location / {
        proxy_set_header  Host                $host;
        proxy_set_header  X-Forwarded-Proto   $scheme;
        proxy_set_header  X-Real-IP           $remote_addr;
        proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;

        proxy_pass http://ghost:2368;
    }
}

server {
    listen 443 ssl default_server;

    ssl on;
    include /config/nginx/proxy-confs/*.subfolder.conf;
    include /config/nginx/ssl.conf;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root  /frontend;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
    }

    location /api {
        proxy_pass http://api:8000/api;
    }

    location /rest-auth {
        proxy_pass http://api:8000/rest-auth;
    }

    location /fileserver {
        rewrite  ^/fileserver/(.*) /$1 break;
        proxy_pass http://fileserver:9000/;
    }

    location /github {
        proxy_pass http://deploy:8000/github;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
